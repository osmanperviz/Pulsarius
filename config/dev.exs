import Config

# Configure your database
config :pulsarius, Pulsarius.Repo,
  username: "postgres",
  password: "postgres",
  hostname: "localhost",
  database: "pulsarius_dev",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with esbuild to bundle .js and .css sources.
config :pulsarius, PulsariusWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: 4000],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  secret_key_base: "xqkmZawquHct5MntBSIMAuiuDL7HORyUM3hv5kRLZKv8IyifciLX9Bsc31KactnQ",
  watchers: [
    # Start the esbuild watcher by calling Esbuild.install_and_run(:default, args)
    esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Watch static and templates for browser reloading.
config :pulsarius, PulsariusWeb.Endpoint,
  live_reload: [
    patterns: [
      ~r"priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/pulsarius_web/(live|views)/.*(ex)$",
      ~r"lib/pulsarius_web/templates/.*(eex)$"
    ]
  ]

# Do not include metadata nor timestamps in development logs
config :logger, :console, level: :debug, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :pulsarius, :slack_integration,
  client_id: "4659483875559.4686702025457",
  client_secret: "d4b34882b201055a88253f44980b7e1c",
  oauth_endpoint: "https://slack.com/api/oauth.v2.access"

config :ueberauth, Ueberauth.Strategy.Passwordless,
  token_secret: "MK5izBztrRZoUmfc8P/XwoBXmOKzEE8o",
  mailer: MyApp.MyMailer

# test stripe credentials
config :stripity_stripe,
  api_key: "sk_test_OiDc9MlITvMIbP8owSzIFEdX",
  signing_secret: "whsec_d2a82c11224e8f58fb3df1dc685b10b360646395bdb6a9fd159346fe43f84ee3",
  public_key: "pk_test_PExnBBWOVfYS4dz43A4SuLL9"

# config :ex_aws,
#   access_key_id: "AKIAX2SE3I2SX4W6YLEX",
#   secret_access_key: "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",
#   bucket_name: "pulsarius-dev",
#   s3: [
#     scheme: "https://",
#     host: "pulsarius-dev.s3.amazonaws.com",
#     region: "eu-central-1"
#   ]

config :rollbax, enabled: false